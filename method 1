# Use simulated data 
# clean version
# we use primarily the sampling package for analysis

rm(list=ls())

library(sampling)

# read .csv file from github


library(curl)

sample <- read.csv( curl('https://raw.githubusercontent.com/neungsooha/datafile/master/sample.csv') )


names(sample)=tolower(names(sample))
dim(sample)

# just the responders
sample_r=sample[sample$s1==1,]

nsf02=read.csv( curl("https://raw.githubusercontent.com/neungsooha/datafile/master/nsf02.csv"))
names(nsf02)=tolower(names(nsf02))


tot.nsf02=with(nsf02, c('(Intercept)'=sum(adj_wt), 'yotmthlp'=sum(yotmthlp*adj_wt),
	'white'=sum(white*adj_wt), 'male'=sum(male*adj_wt), 
	'young'=sum(young*adj_wt)))


# so the total from the nsf02 is different than total from nsf01

Xs=with(sample_r, cbind(rep(1, dim(sample_r)[1]), yotmthlp, white, 
	male, young))


d=sample_r$adj_wt

sample.g1=calib(Xs, d=d, tot.nsf02, method='linear')
w_ik=d*sample.g1

w_ik1=rep(0, dim(sample)[1])

ind=which(sample$s1==1)
w_ik1[ind]=w_ik

# result from sudaan
sud_method1=read.csv( curl("https://raw.githubusercontent.com/neungsooha/datafile/master/sample%20with%20final%20weights%20from%20method%201.csv"))


# compare the result with sudaan
cbind(w_ik1, sud_method1$f_wt1)[1:10,]

sample_method1.ver2=cbind.data.frame(sample, 'f_wt'=w_ik1 )

# save the result
write.csv(sample_method1.ver2, 
          'your_local_file',
          row.names=F)








#
